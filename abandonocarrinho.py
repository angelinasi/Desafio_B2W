# -*- coding: utf-8 -*-
"""teste_beam.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ohiGOohb1XBzqu6E07T5JgT1ny79TY4C
"""

# Run and print a shell command.
def run(cmd):
  !{cmd}

# Install apache-beam.
run('pip install --quiet apache-beam')
run('pip install --quiet apache-beam[interactive]')

from __future__ import absolute_import

import json
from builtins import object

import apache_beam as beam
from apache_beam.io import ReadFromText
from apache_beam.io import WriteToText

inputs_pattern = 'input/*'
outputs_prefix = 'output/part'

class JsonCoder(object):

  def encode(self, x):
    return json.dumps(x)

  def decode(self, x):
    return json.loads(x)

def filtrar(interacoes, pago, data):
  for dt in data:
    if interacoes['customer'] == dt[0] and interacoes['timestamp'] == dt[1] and interacoes['customer'] not in pago:
      yield interacoes

with beam.Pipeline() as pipeline:
  interacoes = pipeline | ReadFromText(inputs_pattern, coder=JsonCoder())

  datas_lista = (
        interacoes
        | beam.Map(lambda elem: (elem['customer'], elem['timestamp']))
        | beam.CombinePerKey(max)
   )  

  pagos_lista = (
        interacoes
        | beam.Filter(lambda elem: elem['page'] == 'checkout')
        | 'Keys' >> beam.Map(lambda elements: elements['customer'])     
  )

  x = (
      interacoes
      | beam.FlatMap(filtrar, pago=beam.pvalue.AsList(pagos_lista),data=beam.pvalue.AsList(datas_lista))
      | WriteToText(outputs_prefix, coder=JsonCoder())
      #| "ccc" >> beam.ParDo(print)
  )

